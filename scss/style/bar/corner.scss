$_shadow-size: $padding;
$_radius: $radius * $hyprland-gaps-multiplier * $screen-corner-multiplier;
$_margin: 99px;





/*
$padding: Used to define $_shadow-size.
$radius: Used to define $_radius.
$hyprland-gaps-multiplier: Used in the calculation of $_radius.
$screen-corner-multiplier: Also used in the calculation of $_radius.
$transition: Used in the transition property.
$shadows: Used to determine if shadows should be applied.
$shadow-color: Used for the shadow color.
$bar-position: Used to determine margin and border settings.
$border-width: Used to set the border properties.
$bg: Used as the background color for the borders.
$border-color: Used in the box corner shadow and border radius.


*/

window.screen-corner:not(.hidden) {
    transition: $transition;

    box.shadow {
        margin-right: $_margin * -1;
        margin-left: $_margin * -1;

        @if $shadows {
            box-shadow: inset 0 0 $_shadow-size 0 $shadow-color;
        }

        @if $bar-position =="top" {
            margin-bottom: $_margin * -1;
        }

        @if $bar-position =="bottom" {
            margin-top: $_margin * -1;
        }
    }

    box.border {
        @if $bar-position =="top" {
            border-top: $border-width solid $bg;
        }

        @if $bar-position =="bottom" {
            border-bottom: $border-width solid $bg;
        }

        margin-right: $_margin;
        margin-left: $_margin;
    }

    box.corner {
        box-shadow: 0 0 0 $border-width $border-color;
    }

    &.corners {
        box.border {
            border-radius: if($radius>0, $_radius, 0);
            box-shadow: 0 0 0 $_radius $bg;
        }

        box.corner {
            border-radius: if($radius>0, $_radius, 0);
        }
    }
}
